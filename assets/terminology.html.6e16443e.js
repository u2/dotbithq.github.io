import{_ as s,o as c,c as d,a as e,b as a,d as t,w as r,e as h,r as o}from"./app.870e5b30.js";const l={},u=h('<h1 id="terminology" tabindex="-1"><a class="header-anchor" href="#terminology" aria-hidden="true">#</a> Terminology</h1><h3 id="bit" tabindex="-1"><a class="header-anchor" href="#bit" aria-hidden="true">#</a> .BIT</h3><h5 id="bit-1" tabindex="-1"><a class="header-anchor" href="#bit-1" aria-hidden="true">#</a> .bit</h5><p>Generally refers to the entire .bit open-source project.</p><h5 id="bit-account" tabindex="-1"><a class="header-anchor" href="#bit-account" aria-hidden="true">#</a> .bit account</h5><p>Refers to each individual account, such as alice.bit, bob.bit.</p><h5 id="bit-domain" tabindex="-1"><a class="header-anchor" href="#bit-domain" aria-hidden="true">#</a> .bit domain</h5><p>Another name for a .bit account.</p><h5 id="bit-alias" tabindex="-1"><a class="header-anchor" href="#bit-alias" aria-hidden="true">#</a> .bit Alias</h5><p>Each blockchain address can be uniquely mapped to a .bit account for easy identification of the address&#39;s ownership and to optimize user experience. This feature is called .bit Alias.</p>',10),b=e("h5",{id:"bit-subdid-subdid",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#bit-subdid-subdid","aria-hidden":"true"},"#"),a(" .bit SubDID (SubDID)")],-1),f=e("p",null,[a("Each main account can distribute its own SubDID, similar in form to "),e("code",null,"child.parent.bit"),a(". SubDID can be used in any community to enhance community cohesion.")],-1),p=h('<h3 id="register-bit" tabindex="-1"><a class="header-anchor" href="#register-bit" aria-hidden="true">#</a> Register .bit</h3><h5 id="register" tabindex="-1"><a class="header-anchor" href="#register" aria-hidden="true">#</a> Register</h5><p>The process of obtaining a .bit account by paying a fee to the .bit contract.</p><h5 id="registration-fee" tabindex="-1"><a class="header-anchor" href="#registration-fee" aria-hidden="true">#</a> Registration fee</h5><p>Holding a .bit account requires paying a certain fee annually, and the fees vary depending on the length of the account name.</p><h5 id="storage-fee" tabindex="-1"><a class="header-anchor" href="#storage-fee" aria-hidden="true">#</a> Storage fee</h5><p>The resolution records of each account are stored on the blockchain and require a fixed storage space, so a certain storage fee must be paid. The storage fee will be refunded after the account expires and is reclaimed.</p><h5 id="inviter" tabindex="-1"><a class="header-anchor" href="#inviter" aria-hidden="true">#</a> Inviter</h5><p>Any .bit account can act as an inviter. When you register an account, you fill in a .bit account as the inviter, and you can get certain discounts; when someone else registers an account and fills in your .bit account as the inviter, you can also get certain rewards.</p><h5 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> Channel</h5><p>Any product (such as a wallet) that integrates .bit registration services can be called a channel. If a user completes the registration through the channel, the channel can get a certain proportion of the registration fee.</p><h5 id="registrar" tabindex="-1"><a class="header-anchor" href="#registrar" aria-hidden="true">#</a> Registrar</h5><p>An organization or individual that provides users with a registration interface and payment method.</p><h5 id="on-chain-time" tabindex="-1"><a class="header-anchor" href="#on-chain-time" aria-hidden="true">#</a> On-chain time</h5><p>Refers to the time on the blockchain, which is usually slightly behind the real-world time and does not pass uniformly like real-world time.</p><h3 id="manage-bit" tabindex="-1"><a class="header-anchor" href="#manage-bit" aria-hidden="true">#</a> Manage .bit</h3><h5 id="owner" tabindex="-1"><a class="header-anchor" href="#owner" aria-hidden="true">#</a> Owner</h5><p>Each account has an owner who owns the ownership of the .bit account and can modify the owner and administrator.</p><h5 id="administrator" tabindex="-1"><a class="header-anchor" href="#administrator" aria-hidden="true">#</a> Administrator</h5><p>Each account has an administrator who has the management rights of the .bit account and can modify the resolution records of the account.</p><h5 id="resolution-record" tabindex="-1"><a class="header-anchor" href="#resolution-record" aria-hidden="true">#</a> Resolution record</h5><p>Each piece of data associated with a .bit account, such as a BTC address or a Twitter account, is called a resolution record.</p><h3 id="bit-contract" tabindex="-1"><a class="header-anchor" href="#bit-contract" aria-hidden="true">#</a> .bit Contract</h3><h5 id="nervos" tabindex="-1"><a class="header-anchor" href="#nervos" aria-hidden="true">#</a> Nervos</h5>',24),m={href:"https://nervos.org",target:"_blank",rel:"noopener noreferrer"},_=e("h5",{id:"cell",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cell","aria-hidden":"true"},"#"),a(" Cell")],-1),g=e("p",null,"Cell is the most basic unit of Nervos. Cell is a concept abstracted from the UTXO model of Bitcoin and can carry many different types of data: tokens, code, JSON, etc.",-1),y=e("p",null,"According to different uses, the Cells used by .bit have different names:",-1),w=e("ul",null,[e("li",null,"AccountCell: the basic unit carrying the .bit account, and a primary account has an AccountCell."),e("li",null,"IncomeCell: the Cell that carries the CKB balance within the .bit ecosystem, which is often used in commission rebates, reward scenarios, etc."),e("li",null,"BalanceCell: the Cell that carries the .bit account balance.")],-1),x={href:"https://github.com/dotbitHQ/das-contracts/blob/master/docs/zh-hans/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/Cell-%E7%BB%93%E6%9E%84%E5%8D%8F%E8%AE%AE.md",target:"_blank",rel:"noopener noreferrer"},k=e("h3",{id:"third-party-terms",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#third-party-terms","aria-hidden":"true"},"#"),a(" Third-Party Terms")],-1),E=e("h5",{id:"coin-type",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#coin-type","aria-hidden":"true"},"#"),a(" coin_type")],-1),v=e("p",null,"A digital string that meets the SLIP-0044 specification, used to represent a token or public chain.",-1),C={href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md",target:"_blank",rel:"noopener noreferrer"},A=e("h5",{id:"chain-id",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#chain-id","aria-hidden":"true"},"#"),a(" chain_id")],-1),I=e("p",null,"An Ethereum network identifier that complies with the EIP-155 specification. Used to distinguish between different EVM-compatible chains/networks.",-1),T=e("code",null,"chain_id",-1),B={href:"https://chainlist.org/",target:"_blank",rel:"noopener noreferrer"};function D(S,R){const n=o("RouterLink"),i=o("ExternalLinkIcon");return c(),d("div",null,[u,e("blockquote",null,[e("p",null,[a("See "),t(n,{to:"/technical-details/alias.html"},{default:r(()=>[a(".bit Alias")]),_:1}),a(" for more details.")])]),b,f,e("blockquote",null,[e("p",null,[a("See "),t(n,{to:"/technical-details/subdid.html"},{default:r(()=>[a(".bit SubDID")]),_:1}),a(" for more details.")])]),p,e("p",null,[a("The .bit contract is deployed on "),e("a",m,[a("Nervos"),t(i)]),a(", a public chain with smart contracts based on the Cell (UTXO) model.")]),_,g,y,w,e("blockquote",null,[e("p",null,[a("View all Cell types: "),e("a",x,[a("Cell Protocol v1"),t(i)])])]),k,E,v,e("p",null,[a("In .bit, the coin_type is mainly used in the resolution records of the "),t(n,{to:"/technical-details/data-container.html"},{default:r(()=>[a("data container")]),_:1}),a(" to distinguish between different public chain addresses.")]),e("blockquote",null,[e("p",null,[a("View the complete "),e("a",C,[a("SLIP-0044"),t(i)])])]),A,I,e("blockquote",null,[e("p",null,[a("View the full list of "),T,a(" networks: "),e("a",B,[a("ChainList"),t(i)])])])])}var N=s(l,[["render",D],["__file","terminology.html.vue"]]);export{N as default};
